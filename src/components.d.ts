/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
/* tslint:disable */

import '@stencil/core';




declare global {
  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}

  namespace StencilComponents {

    interface EwcSlide {

    }

    interface EwcSlides {
      /**
       * Get the index of the active slide.
       */
      'getActiveIndex': () => number;
      /**
       * Get the index of the next slide.
       */
      'getNextIndex': () => number;
      /**
       * Get the index of the previous slide.
       */
      'getPreviousIndex': () => number;
      /**
       * Get the percent of completed slides.
       */
      'getProgress': () => number;
      /**
       * Get the total number of slides.
       */
      'getTotalSlides': () => number;
      /**
       * Get whether or not the current slide is the first slide.
       */
      'isBeginning': () => boolean;
      /**
       * Get whether or not the current slide is the last slide.
       */
      'isEnd': () => boolean;
      /**
       * Lock or unlock the ability to change the active slide.
       */
      'lockSwipes': (shouldLockSwipes: boolean) => void;
      /**
       * Transition to the next slide.
       */
      'nextSlide': () => void;
      /**
       * Transition to the previous slide.
       */
      'previousSlide': () => void;
      /**
       * Transition to the specified slide.
       */
      'slideTo': (index: number) => void;
    }
  }


    interface HTMLEwcSlideElement extends StencilComponents.EwcSlide, HTMLStencilElement {}

    var HTMLEwcSlideElement: {
      prototype: HTMLEwcSlideElement;
      new (): HTMLEwcSlideElement;
    };
    

    interface HTMLEwcSlidesElement extends StencilComponents.EwcSlides, HTMLStencilElement {}

    var HTMLEwcSlidesElement: {
      prototype: HTMLEwcSlidesElement;
      new (): HTMLEwcSlidesElement;
    };
    

  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {
    'ewc-slide': JSXElements.EwcSlideAttributes;
    'ewc-slides': JSXElements.EwcSlidesAttributes;
    }
  }

  namespace JSXElements {

    export interface EwcSlideAttributes extends HTMLAttributes {

    }

    export interface EwcSlidesAttributes extends HTMLAttributes {
      /**
       * Emitted when the slider is actively being moved.
       */
      'onSliderDrag'?: (event: CustomEvent) => void;
      /**
       * Emitted when the active index has changed.
       */
      'onSliderIndexChange'?: (event: CustomEvent) => void;
      /**
       * Emitted when the slider is at the first slide.
       */
      'onSliderReachBeginning'?: (event: CustomEvent) => void;
      /**
       * Emitted when the slider is at the last slide.
       */
      'onSliderReachEnd'?: (event: CustomEvent) => void;
      /**
       * Emitted when the user releases the touch.
       */
      'onSliderTouchEnd'?: (event: CustomEvent) => void;
      /**
       * Emitted when the user first touches the slider.
       */
      'onSliderTouchStart'?: (event: CustomEvent) => void;
    }
  }

  interface HTMLElementTagNameMap {
    'ewc-slide': HTMLEwcSlideElement
    'ewc-slides': HTMLEwcSlidesElement
  }

  interface ElementTagNameMap {
    'ewc-slide': HTMLEwcSlideElement;
    'ewc-slides': HTMLEwcSlidesElement;
  }
}
declare global { namespace JSX { interface StencilJSX {} } }

export declare function defineCustomElements(window: any): void;